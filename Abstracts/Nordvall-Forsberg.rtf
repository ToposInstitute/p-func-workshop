{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww7200\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl220\partightenfactor0

\f0\fs20 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Quantitative Type Theory combines linear types (where we keep track of\
how many times a variable is used) and dependent types (where terms can\
appear in types). This gives a logical system which is both expressive\
and precise with respect to the resource usage of programs and proofs,\
with a rich model theory. I will talk about polynomial functors and\
their initial algebras in this setting, and how their elimination\
principles can be tailored to derive strong conclusions such as the\
possibility of "in-place update" for natural transformations between the\
functors, and "free theorems" such as that every linear endofunction on\
a quantitative polynomial functor is a permutation.\
\
This is joint work with Georgi Nakov.}